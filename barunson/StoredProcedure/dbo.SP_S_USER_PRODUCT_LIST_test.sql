IF OBJECT_ID (N'dbo.SP_S_USER_PRODUCT_LIST_test', N'P') IS NOT NULL DROP PROCEDURE dbo.SP_S_USER_PRODUCT_LIST_test
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_S_USER_PRODUCT_LIST_test]
/***************************************************************
작성자	:	표수현
작성일	:	2020-02-15
DESCRIPTION	:	프런트 - 상품 리스트 정보 
SPECIAL LOGIC	: SP_S_USER_PRODUCT_LIST_TEST  @USER_ID = 'VYRUDAKS80', @CATEGORY_ID = 97, @SORT_GUBUN = 0

SELECT * FROM TB_WISH_LIST
******************************************************************
MODIFICATION 
******************************************************************
수정일           작업자                DESCRIPTION
==================================================================
******************************************************************/
 @USER_ID VARCHAR(50) = NULL,
 @CATEGORY_ID	INT = NULL,
 @SORT_GUBUN INT = NULL,
 @SEARCHBRAND_CODE VARCHAR(10) = NULL,
 @ID OBJECTTYPE READONLY  -- 테이블 반환 매개변수
AS

 SET NOCOUNT ON
 SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

 
 DECLARE @CONDITION1 INT = 0

 IF @SEARCHBRAND_CODE IS NOT NULL BEGIN  
	SET @CONDITION1 = 1
 END
 
 DECLARE @SELECTED_CATEGORY_COUNT INT = 0
 
 SELECT @SELECTED_CATEGORY_COUNT = COUNT(*) 
 FROM @ID

 --DROP TABLE #TEMPTABLE

 CREATE TABLE #TEMPTABLE
 (
	UPDATE_DATETIME DATETIME, 
	REGIST_DATETIME DATETIME, 
	PRICE INT, CODE_NAME NVARCHAR(200), 
	PRODUCT_BRAND_CODE VARCHAR(50), 
	CATEGORY_ID INT,
	PRODUCT_ID INT,
	MAIN_IMAGE_URL NVARCHAR(200), 
	PRODUCT_NAME NVARCHAR(200), 
	PRODUCT_CODE VARCHAR(6),
	WISHCNT INT,
	TOTALSALE INT,
	SORT INT
 );

 IF @SELECTED_CATEGORY_COUNT > 0 BEGIN
	INSERT INTO #TEMPTABLE
	SELECT	UPDATE_DATETIME = B.UPDATE_DATETIME, 
			REGIST_DATETIME = B.REGIST_DATETIME,
			PRICE = B.PRICE,
			CODE_NAME = C.CODE_NAME, 
			PRODUCT_BRAND_CODE = B.PRODUCT_BRAND_CODE, 
			CATEGORY_ID = A.CATEGORY_ID, 
			PRODUCT_ID = A.PRODUCT_ID, 
			MAIN_IMAGE_URL = B.MAIN_IMAGE_URL, 
			PRODUCT_NAME = B.PRODUCT_NAME, 
			PRODUCT_CODE = B.PRODUCT_CODE,
			WISHCNT = (SELECT COUNT(*) FROM TB_WISH_LIST WHERE PRODUCT_ID = A.PRODUCT_ID AND USER_ID = @USER_ID),
			TOTALSALE = (SELECT COUNT(*) FROM TB_ORDER P INNER JOIN TB_ORDER_PRODUCT Q ON P.ORDER_ID = Q.ORDER_ID WHERE Q.PRODUCT_ID = A.PRODUCT_ID),
			SORT = A.SORT
	 FROM	TB_PRODUCT_CATEGORY A INNER JOIN 
			TB_PRODUCT B ON A.PRODUCT_ID = B.PRODUCT_ID INNER JOIN 
			TB_COMMON_CODE C ON B.PRODUCT_BRAND_CODE = C.CODE
	 WHERE  B.DISPLAY_YN = 'Y' AND A.CATEGORY_ID IN (SELECT ID FROM @ID) AND
			C.CODE= (CASE WHEN @CONDITION1 = 1 THEN @SEARCHBRAND_CODE ELSE C.CODE END)


 END ELSE BEGIN
	INSERT INTO #TEMPTABLE
	SELECT	UPDATE_DATETIME = B.UPDATE_DATETIME, 
			REGIST_DATETIME = B.REGIST_DATETIME,
			PRICE = B.PRICE,
			CODE_NAME = C.CODE_NAME, 
			PRODUCT_BRAND_CODE = B.PRODUCT_BRAND_CODE, 
			CATEGORY_ID = A.CATEGORY_ID, 
			PRODUCT_ID = A.PRODUCT_ID, 
			MAIN_IMAGE_URL = B.MAIN_IMAGE_URL, 
			PRODUCT_NAME = B.PRODUCT_NAME, 
			PRODUCT_CODE = B.PRODUCT_CODE,
			WISHCNT = (SELECT COUNT(*) FROM TB_WISH_LIST WHERE PRODUCT_ID = A.PRODUCT_ID AND USER_ID = @USER_ID),
			TOTALSALE = (SELECT COUNT(*) FROM TB_ORDER P INNER JOIN TB_ORDER_PRODUCT Q ON P.ORDER_ID = Q.ORDER_ID WHERE Q.PRODUCT_ID = A.PRODUCT_ID),
			SORT = A.SORT
	FROM	TB_PRODUCT_CATEGORY A INNER JOIN 
			TB_PRODUCT B ON A.PRODUCT_ID = B.PRODUCT_ID INNER JOIN 
			TB_COMMON_CODE C ON B.PRODUCT_BRAND_CODE = C.CODE
	WHERE  B.DISPLAY_YN = 'Y' AND A.CATEGORY_ID IN (SELECT CATEGORY_ID FROM TB_CATEGORY WHERE CATEGORY_ID = @CATEGORY_ID OR PARENT_CATEGORY_ID =  @CATEGORY_ID ) AND
			C.CODE= (CASE WHEN @CONDITION1 = 1 THEN @SEARCHBRAND_CODE ELSE C.CODE END)

 END 


 SELECT  * FROM (
					SELECT	UPDATE_DATETIME = MAX(UPDATE_DATETIME), 
							REGIST_DATETIME = MAX(REGIST_DATETIME), 
							PRICE = MAX(PRICE) , 
							CODE_NAME = MAX(CODE_NAME), 
							PRODUCT_BRAND_CODE = MAX(PRODUCT_BRAND_CODE) , 
							CATEGORY_ID = MAX(CATEGORY_ID) ,
							PRODUCT_ID = MAX(PRODUCT_ID) ,
							MAIN_IMAGE_URL = MAX(MAIN_IMAGE_URL), 
							PRODUCT_NAME = MAX(PRODUCT_NAME), 
							PRODUCT_CODE = MAX(PRODUCT_CODE) ,
							WISHCNT = MAX(WISHCNT) ,
							TOTALSALE = MAX(TOTALSALE),
							SORT = MAX(SORT) 
					FROM #TEMPTABLE
					GROUP BY #TEMPTABLE.PRODUCT_ID
			) TB
 ORDER BY   
			CASE WHEN @SORT_GUBUN = 0  THEN TB.REGIST_DATETIME END DESC,  
			--CASE WHEN @SORT_GUBUN = 0  THEN TB.SORT END ASC,  
			CASE WHEN @SORT_GUBUN = 1  THEN TB.REGIST_DATETIME END DESC,  
			CASE WHEN @SORT_GUBUN = 2 THEN TB.TOTALSALE  END ASC  ,
			CASE WHEN @SORT_GUBUN = 3  THEN TB.PRICE END ASC  ,
			CASE WHEN @SORT_GUBUN = 4  THEN TB.PRICE  END DESC 


 -- SELECT * 
 -- FROM (
	--	SELECT	
		
	--	UPDATE_DATETIME = MAX(B.UPDATE_DATETIME), 
	--			PRICE = MAX(B.PRICE),
	--			CODE_NAME = MAX(C.CODE_NAME), 
	--			PRODUCT_BRAND_CODE = MAX(B.PRODUCT_BRAND_CODE), 
	--			CATEGORY_ID = MAX(A.CATEGORY_ID), 
	--			PRODUCT_ID = A.PRODUCT_ID, 
	--			MAIN_IMAGE_URL = MAX(B.MAIN_IMAGE_URL), 
	--			PRODUCT_NAME = MAX(B.PRODUCT_NAME), 
	--			PRODUCT_CODE = MAX(B.PRODUCT_CODE),
	--			WISHCNT = (SELECT COUNT(*) FROM TB_WISH_LIST WHERE PRODUCT_ID = MAX(A.PRODUCT_ID) AND USER_ID = @USER_ID),
	--			TOTALSALE = (SELECT COUNT(*) FROM TB_ORDER P INNER JOIN TB_ORDER_PRODUCT Q ON P.ORDER_ID = Q.ORDER_ID WHERE Q.PRODUCT_ID = MAX(A.PRODUCT_ID)),
	--			SORT = MAX(A.SORT)
	--	FROM	TB_PRODUCT_CATEGORY A INNER JOIN 
	--			TB_PRODUCT B ON A.PRODUCT_ID = B.PRODUCT_ID INNER JOIN 
	--			TB_COMMON_CODE C ON B.PRODUCT_BRAND_CODE = C.CODE
	--	WHERE CATEGORY_ID IN (SELECT CATEGORY_ID FROM TB_CATEGORY WHERE CATEGORY_ID = @CATEGORY_ID OR PARENT_CATEGORY_ID =  @CATEGORY_ID ) AND
	--		  C.CODE= (CASE WHEN @CONDITION1 = 1 THEN @SEARCHBRAND_CODE ELSE C.CODE END) 
	--	GROUP BY A.PRODUCT_ID

	--  ) TB
 --ORDER BY   CASE WHEN @SORT_GUBUN = 0  THEN TB.SORT END ASC,  
	--		CASE WHEN @SORT_GUBUN = 1  THEN TB.UPDATE_DATETIME END ASC,  
	--		CASE WHEN @SORT_GUBUN = 2 THEN TB.TOTALSALE  END ASC  ,
	--		CASE WHEN @SORT_GUBUN = 3  THEN TB.PRICE END ASC  ,
	--		CASE WHEN @SORT_GUBUN = 4  THEN TB.PRICE  END DESC 

 -- SELECT * 
 -- FROM (
	--	SELECT	B.UPDATE_DATETIME, 
	--			B.PRICE,
	--			C.CODE_NAME, B.PRODUCT_BRAND_CODE, A.CATEGORY_ID, A.PRODUCT_ID, 
	--			B.MAIN_IMAGE_URL, 
	--			B.PRODUCT_NAME, 
	--			B.PRODUCT_CODE,
	--			WISHCNT = (SELECT COUNT(*) FROM TB_WISH_LIST WHERE PRODUCT_ID = A.PRODUCT_ID AND USER_ID = @USER_ID),
	--			TOTALSALE = (SELECT COUNT(*) FROM TB_ORDER P INNER JOIN TB_ORDER_PRODUCT Q ON P.ORDER_ID = Q.ORDER_ID WHERE Q.PRODUCT_ID = A.PRODUCT_ID),
	--			SORT = A.SORT
	--	FROM	TB_PRODUCT_CATEGORY A INNER JOIN 
	--			TB_PRODUCT B ON A.PRODUCT_ID = B.PRODUCT_ID INNER JOIN 
	--			TB_COMMON_CODE C ON B.PRODUCT_BRAND_CODE = C.CODE
	--	WHERE CATEGORY_ID IN (SELECT CATEGORY_ID FROM TB_CATEGORY WHERE CATEGORY_ID = @CATEGORY_ID OR PARENT_CATEGORY_ID =  @CATEGORY_ID ) AND
	--		  C.CODE= (CASE WHEN @CONDITION1 = 1 THEN @SEARCHBRAND_CODE ELSE C.CODE END)
	--  ) TB
 --ORDER BY   CASE WHEN @SORT_GUBUN = 0  THEN TB.SORT END ASC,  
	--		CASE WHEN @SORT_GUBUN = 1  THEN TB.UPDATE_DATETIME END ASC,  
	--		CASE WHEN @SORT_GUBUN = 2 THEN TB.TOTALSALE  END ASC  ,
	--		CASE WHEN @SORT_GUBUN = 3  THEN TB.PRICE END ASC  ,
	--		CASE WHEN @SORT_GUBUN = 4  THEN TB.PRICE  END DESC 
			

/**** 아이콘 리스트 *************/
 SELECT	A.PRODUCT_ID,ICON_URL FROM 
		TB_PRODUCT_ICON A INNER JOIN 
		TB_ICON B ON A.ICON_ID = B.ICON_ID
 WHERE A.PRODUCT_ID IN(
						SELECT	A.PRODUCT_ID
						FROM	TB_PRODUCT_CATEGORY A INNER JOIN 
								TB_PRODUCT B ON A.PRODUCT_ID = B.PRODUCT_ID INNER JOIN 
								TB_COMMON_CODE C ON B.PRODUCT_BRAND_CODE = C.CODE
						WHERE CATEGORY_ID IN (
												SELECT CATEGORY_ID 
												FROM TB_CATEGORY 
												WHERE CATEGORY_ID = @CATEGORY_ID OR PARENT_CATEGORY_ID =  @CATEGORY_ID 
											) AND
											C.CODE= (CASE WHEN @CONDITION1 = 1 THEN @SEARCHBRAND_CODE ELSE C.CODE END)
					   )


GO
