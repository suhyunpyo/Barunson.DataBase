IF OBJECT_ID (N'dbo.SP_S_USER_ORDER_INFO2', N'P') IS NOT NULL DROP PROCEDURE dbo.SP_S_USER_ORDER_INFO2
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_S_USER_ORDER_INFO2]
/***************************************************************
작성자	:	표수현
작성일	:	2020-02-15
DESCRIPTION	:	프런트 - MCARDSTEP3 / MTHANKSCARDSTEP3 전용
SPECIAL LOGIC	:  SP_S_USER_ORDER_INFO2 1, 454


SELECT * FROM TB_COUPON_PUBLISH F INNER JOIN 
												 VW_USER Q ON F.USER_ID = Q.USER_ID
							WHERE F.USER_ID = 'VYRUDAKS00' AND F.USE_YN = 'N' AND 
									(F.RETRIEVE_DATETIME IS NULL  OR F.EXPIRATION_DATE >= GETDATE())

******************************************************************
MODIFICATION
******************************************************************
수정일           작업자                DESCRIPTION
==================================================================
******************************************************************/
 @GUBUN		INT = 1,		--  1 : 주문정보 조회 / 2 : 발급받은 쿠폰 조회
 @ORDER_ID	INT = 1
AS

 SET NOCOUNT ON
 SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED

 IF @GUBUN = 1 BEGIN  -- 주문건 정보 조회 
	
	UPDATE TB_ORDER
	SET REGIST_DATETIME = GETDATE()
	WHERE ORDER_ID = @ORDER_ID 
		  AND PAYMENT_STATUS_CODE = 'PSC01' 

	SELECT	ORDER_ID = A.ORDER_ID,
			PG_ID = A.PG_ID,
			ORDER_CODE = A.ORDER_CODE ,  
			ORDER_DATETIME = A.ORDER_DATETIME , 
			REGIST_DATETIME = A.REGIST_DATETIME,
			PRODUCT_CODE = C.PRODUCT_CODE,
			PRODUCT_NAME = C.PRODUCT_NAME,
			PRODUCT_PRICE = C.PRICE,
			TOTAL_PRICE = B.TOTAL_PRICE,
			COUPON_PRICE = A.COUPON_PRICE,
			EMAIL = A.EMAIL,
			COUPO_CNT = (
						 -- 쿠폰을 사용하지 않고, 회수하지 않고, 만료일이 지나지 않고, 쿠폰등록시 설정된 가격제한에 걸리지 않는 쿠폰개수 
							
							select count(*) from 
							(
								SELECT  F.EXPIRATION_DATE  FROM TB_COUPON_PUBLISH F INNER JOIN 
													 VW_USER Q ON F.USER_ID = Q.USER_ID INNER JOIN 
													 TB_Coupon V on F.Coupon_ID = V.Coupon_ID
													 --INNER JOIN 
													--TB_ORDER_COUPON_USE S ON F.COUPON_PUBLISH_ID = S.COUPON_PUBLISH_ID
								WHERE F.USER_ID = A.USER_ID AND F.USE_YN = 'N' AND --AND S.ORDER_ID = A.ORDER_ID
									F.RETRIEVE_DATETIME IS NULL  and 
									   CONVERT(int,C.PRICE) >= ISNULL(V.Standard_Purchase_Price, 0)
							) tb 
							where 
							 (
									case when tb.EXPIRATION_DATE IS not NULL 
									then tb.EXPIRATION_DATE
									else  GETDATE()
									 end 
							)
								 >= GETDATE()
						)
						,

			--COUPO_CNT = (
			--			 -- 쿠폰을 사용하지 않고, 회수하지 않고, 만료일이 지나지 않고, 쿠폰등록시 설정된 가격제한에 걸리지 않는 쿠폰개수 
			--				SELECT COUNT(*) FROM TB_COUPON_PUBLISH F INNER JOIN 
			--									 VW_USER Q ON F.USER_ID = Q.USER_ID INNER JOIN 
			--									 TB_Coupon V on F.Coupon_ID = V.Coupon_ID
			--									 --INNER JOIN 
			--									--TB_ORDER_COUPON_USE S ON F.COUPON_PUBLISH_ID = S.COUPON_PUBLISH_ID
			--				WHERE F.USER_ID = A.USER_ID AND F.USE_YN = 'N' AND --AND S.ORDER_ID = A.ORDER_ID
			--					  (F.RETRIEVE_DATETIME IS NULL OR F.EXPIRATION_DATE >= GETDATE()) and
			--					   CONVERT(int,C.PRICE) >= ISNULL(V.Standard_Purchase_Price, 0)
			--			),
			INVITATION_DISPLAY_YN = K.INVITATION_DISPLAY_YN,
			PRODUCT_CODE2 = CASE  F.CODE  WHEN 'PCC01' THEN 'MCARD' WHEN 'PCC02'  THEN 'MTHANKS' END ,
			PRODUCT_CATEGORY_NAME = F.CODE_NAME,
			PREVIEW_IMAGE_URL =  C.PREVIEW_IMAGE_URL,
			MAIN_IMAGE_URL = C.MAIN_IMAGE_URL,
			PAYMENT_PRICE = A.PAYMENT_PRICE,
			INVITATION_URL = K.INVITATION_URL,
			CELLPHONE_NUMBER = A.CELLPHONE_NUMBER,
			INVITATION_ID = G.INVITATION_ID,
			ACCOUNT_NUMBER = A.ACCOUNT_NUMBER,
			FINANCE_NAME = A.FINANCE_NAME,
			COUPON_EXCEPTION_PRODUCT_CODE = (SELECT PRODUCT_CODE FROM TB_COUPON_EXCEPTION_PRODUCT WHERE PRODUCT_CODE = C.PRODUCT_CODE),
			PAYMENT_STATUS_CODE = A.PAYMENT_STATUS_CODE
	FROM TB_ORDER A INNER JOIN 
		 TB_ORDER_PRODUCT B ON A.ORDER_ID = B.ORDER_ID INNER JOIN 
		 TB_PRODUCT C ON B.PRODUCT_ID = C.PRODUCT_ID INNER JOIN 
		 BARUNSON.DBO.TB_INVITATION G ON A.ORDER_ID = G.ORDER_ID  INNER JOIN 
		 BARUNSON.DBO.TB_COMMON_CODE F ON C.PRODUCT_CATEGORY_CODE = F.CODE INNER JOIN   
		BARUNSON.DBO.TB_INVITATION_DETAIL K ON G.INVITATION_ID =  K.INVITATION_ID 
	WHERE A.ORDER_ID = @ORDER_ID 
	

 END ELSE BEGIN  -- 발급받은 쿠폰 조회
	
	DECLARE @USER_ID VARCHAR(100)

	SELECT @USER_ID 
	FROM TB_ORDER
	WHERE ORDER_ID = @ORDER_ID
		
	SELECT	DISTINCT(A.COUPON_NAME)
	FROM	TB_COUPON A INNER JOIN TB_COUPON_PUBLISH B ON A.COUPON_ID = B.COUPON_ID  
	WHERE	B.USER_ID =  @USER_ID

 END
GO
