IF OBJECT_ID (N'dbo.SP_SELECT_USER_INFO_FOR_BEWEDDING', N'P') IS NOT NULL DROP PROCEDURE dbo.SP_SELECT_USER_INFO_FOR_BEWEDDING
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*

EXEC SP_SELECT_USER_INFO_FOR_BEWEDDING '', '2016-01-01', '2017-02-28', 100, 1

*/

CREATE PROCEDURE [dbo].[SP_SELECT_USER_INFO_FOR_BEWEDDING]
		@P_SEARCH_VALUE AS VARCHAR(100) = ''
	,	@P_START_SIGN_UP_DATE AS VARCHAR(10)
	,	@P_END_SIGN_UP_DATE AS VARCHAR(10)
	,	@P_PAGE_SIZE AS INT
	,	@P_PAGE_NUMBER AS INT

AS
BEGIN
	
	DECLARE @USER_INFO_SITE_DIV AS VARCHAR(10) = 'SB'
	DECLARE @SELECT_SALES_GUBUN AS VARCHAR(10) = 'BE'
	DECLARE @MCARD_SITE_DIV AS VARCHAR(10) = 'BE'


	SET NOCOUNT ON;

	SELECT	A.UID AS Id
		,	MAX(A.TOTAL_LIST_COUNT		)	AS TotalListCount
		,	MAX(A.ROW_NUM				)	AS RowNum
		,	MAX(A.UNAME					)	AS Name		
		,	MAX(A.BIRTH					)	AS Birth
		,	MAX(A.HAND_PHONE1			)	AS Hphone1	
		,	MAX(A.HAND_PHONE2			)	AS Hphone2	
		,	MAX(A.HAND_PHONE3			)	AS Hphone3	
		,	MAX(A.PHONE1				)	AS Phone1		
		,	MAX(A.PHONE2				)	AS Phone2		
		,	MAX(A.PHONE3				)	AS Phone3		
		,	MAX(A.ADDRESS				)	AS Address		
		,	MAX(A.ADDR_DETAIL			)	AS AddressDetail	
		,	MAX(A.CHK_SMS				)	AS SmsYorN		
		,	MAX(A.WEDD_YEAR				)	AS WeddingYear	
		,	MAX(A.WEDD_MONTH			)	AS WeddingMonth	
		,	MAX(A.WEDD_DAY				)	AS WeddingDay	
		,	MAX(A.REG_DATE				)	AS RegDate	

		,	MAX(A.CHK_SMEMBERSHIP		)  AS SamsungMembershipYorN
		,	CASE WHEN ISNULL(MIN(SUITPMA.MARKETING_TYPE_CODE), '') = '119001' THEN 'Y' ELSE 'N' END AS ThirdPartyMarketingForCommunicationYorN
		,	CASE WHEN ISNULL(MAX(SUITPMA.MARKETING_TYPE_CODE), '') = '119002' THEN 'Y' ELSE 'N' END AS ThirdPartyMarketingForInsuranceYorN

		/* 모바일 청첩장 제작 여부 */
		,	CASE WHEN ISNULL(MAX(MI.AUTHCODE), '') = '' THEN 'N' ELSE 'Y' END AS McardPublishYorN
		/* 모바일 청첩장 제작일 */
		,	CASE WHEN ISNULL(MAX(MI.COMPLETEDTIME), '') = '' THEN null ELSE MAX(MI.COMPLETEDTIME) END AS McardPublishRegDate

		/* 청첩장 구매전환 사이트 코드 취합 */
		,	ISNULL
			(
				STUFF
				(
					(	
						SELECT	'/' + C.SALES_GUBUN
						FROM	(
									SELECT CO.SALES_GUBUN
									FROM	CUSTOM_ORDER CO
									WHERE	1 = 1
									AND		CO.SETTLE_STATUS = 2
									AND		CO.MEMBER_ID = A.UID
								) C
						GROUP BY C.SALES_GUBUN
						FOR XML PATH ('')
					), 1, 1, ''
				)
			, '') AS WeddingInvitationConversionToPurchaseSiteList
		/* 청첩장 구매전환 여부 */
		,	CASE WHEN ISNULL((SELECT TOP 1 MEMBER_ID FROM CUSTOM_ORDER WHERE SETTLE_STATUS = 2 AND MEMBER_ID = A.UID), '') = '' THEN 'N' ELSE 'Y' END AS WeddingInvitationConversionToPurchaseYorN

		/* 샘플 구매전환 사이트 코드 취합 */
		,	ISNULL
			(
				STUFF
				(
					(	
						SELECT	'/' + C.SALES_GUBUN
						FROM	(
									SELECT CSO.SALES_GUBUN
									FROM	CUSTOM_SAMPLE_ORDER CSO
									WHERE	1 = 1
									AND		CSO.STATUS_SEQ >= 1
									AND		CSO.MEMBER_ID = A.UID
								) C
						GROUP BY C.SALES_GUBUN
						FOR XML PATH ('')
					), 1, 1, ''
				)
			, '') AS SampleConversionToPurchaseSiteList
		/* 샘플 구매전환 여부 */
		,	CASE WHEN ISNULL((SELECT TOP 1 MEMBER_ID FROM CUSTOM_SAMPLE_ORDER WHERE STATUS_SEQ >= 1 AND MEMBER_ID = A.UID), '') = '' THEN 'N' ELSE 'Y' END AS SampleConversionToPurchaseYorN
	FROM	(

				SELECT	ROW_NUMBER() OVER(ORDER BY SUI.REG_DATE ASC) ROW_NUM
					,	COUNT(*) OVER() AS TOTAL_LIST_COUNT
					,	SUI.UID 
					,	SUI.UNAME
					,	SUI.BIRTH
					,	SUI.HAND_PHONE1
					,	SUI.HAND_PHONE2
					,	SUI.HAND_PHONE3
					,	SUI.PHONE1
					,	SUI.PHONE2
					,	SUI.PHONE3
					,	SUI.ADDRESS
					,	SUI.ADDR_DETAIL
					,	SUI.CHK_SMS
					,	SUI.CHK_SMEMBERSHIP
					,	SUI.WEDD_YEAR
					,	SUI.WEDD_MONTH
					,	SUI.WEDD_DAY
					,	SUI.REG_DATE
				FROM	S2_USERINFO SUI
				WHERE	1 = 1
				AND		SUI.SITE_DIV = @USER_INFO_SITE_DIV
				AND		SUI.SELECT_SALES_GUBUN = @SELECT_SALES_GUBUN
				AND		SUI.REG_DATE >= @P_START_SIGN_UP_DATE + ' 00:00:00'
				AND		SUI.REG_DATE <= @P_END_SIGN_UP_DATE + ' 23:59:59.999'
				AND		(
								ISNULL(@P_SEARCH_VALUE,'') = ''
							OR	SUI.UID LIKE '%' + @P_SEARCH_VALUE + '%' 
							OR	SUI.UNAME LIKE '%' + @P_SEARCH_VALUE + '%'
							OR  (SUI.HAND_PHONE1 + SUI.HAND_PHONE2 + SUI.HAND_PHONE3) LIKE '%' + REPLACE(@P_SEARCH_VALUE, '-', '') + '%'
						)
	
				ORDER BY SUI.REG_DATE DESC

				OFFSET (@P_PAGE_NUMBER - 1) * @P_PAGE_SIZE ROWS
				FETCH NEXT @P_PAGE_SIZE ROW ONLY
			) A
	LEFT JOIN	MCARD_INVITATION MI ON A.UID = MI.AUTHCODE AND MI.SITECODE = @MCARD_SITE_DIV AND MI.PUBLISHYN = 'Y'
	LEFT JOIN	S2_USERINFO_THIRD_PARTY_MARKETING_AGREEMENT SUITPMA ON A.UID = SUITPMA.UID
	WHERE	1 = 1

	GROUP BY A.UID
	ORDER BY MAX(A.REG_DATE) DESC





/* CTE 방식 - 테스트용 */
--WITH CTE_USER_INFO AS
--(
--	SELECT	ROW_NUMBER() OVER(ORDER BY SUI.REG_DATE ASC) ROW_NUM
--		,	SUI.UID 
--		,	SUI.UNAME
--		,	SUI.HAND_PHONE1
--		,	SUI.HAND_PHONE2
--		,	SUI.HAND_PHONE3
--		,	SUI.PHONE1
--		,	SUI.PHONE2
--		,	SUI.PHONE3
--		,	SUI.ADDRESS
--		,	SUI.ADDR_DETAIL
--		,	SUI.CHK_SMS
--		,	SUI.WEDD_YEAR
--		,	SUI.WEDD_MONTH
--		,	SUI.WEDD_DAY
--		,	SUI.REG_DATE
--	FROM	S2_USERINFO SUI
--	WHERE	1 = 1
--	AND		SUI.SITE_DIV = @USER_INFO_SITE_DIV
--	AND		SUI.SELECT_SALES_GUBUN = @SELECT_SALES_GUBUN
--	AND		SUI.REG_DATE >= @P_START_SIGN_UP_DATE + ' 00:00:00'
--	AND		SUI.REG_DATE <= @P_END_SIGN_UP_DATE + ' 23:59:59.999'
--	AND		(
--					ISNULL(@P_SEARCH_VALUE,'') = ''
--				OR	SUI.UID LIKE '%' + @P_SEARCH_VALUE + '%' 
--				OR	SUI.UNAME LIKE '%' + @P_SEARCH_VALUE + '%'
--				OR  (SUI.HAND_PHONE1 + SUI.HAND_PHONE2 + SUI.HAND_PHONE3) LIKE '%' + @P_SEARCH_VALUE + '%'
--			)
--)

--SELECT	CUI.UID
--	,	MAX(CUI.TOTAL_LIST_COUNT	)	AS TOTAL_LIST_COUNT
--	,	MAX(CUI.ROW_NUM				)	AS ROW_NUM
--	,	MAX(CUI.UNAME				)	AS UNAME		
--	,	MAX(CUI.HAND_PHONE1			)	AS HAND_PHONE1	
--	,	MAX(CUI.HAND_PHONE2			)	AS HAND_PHONE2	
--	,	MAX(CUI.HAND_PHONE3			)	AS HAND_PHONE3	
--	,	MAX(CUI.PHONE1				)	AS PHONE1		
--	,	MAX(CUI.PHONE2				)	AS PHONE2		
--	,	MAX(CUI.PHONE3				)	AS PHONE3		
--	,	MAX(CUI.ADDRESS				)	AS ADDRESS		
--	,	MAX(CUI.ADDR_DETAIL			)	AS ADDR_DETAIL	
--	,	MAX(CUI.CHK_SMS				)	AS CHK_SMS		
--	,	MAX(CUI.WEDD_YEAR			)	AS WEDD_YEAR	
--	,	MAX(CUI.WEDD_MONTH			)	AS WEDD_MONTH	
--	,	MAX(CUI.WEDD_DAY			)	AS WEDD_DAY	
--	,	MAX(CUI.REG_DATE			)	AS REG_DATE	

--	/* 모바일 청첩장 제작 여부 */
--	,	CASE WHEN ISNULL(MAX(MI.AUTHCODE), '') = '' THEN 'N' ELSE 'Y' END AS MCARD_PUBLISH_YORN
--	/* 모바일 청첩장 제작일 */
--	,	CASE WHEN ISNULL(MAX(MI.COMPLETEDTIME), '') = '' THEN null ELSE MAX(MI.COMPLETEDTIME) END AS MCARD_PUBLISH_REG_DATE

--	/* 청첩장 구매전환 사이트 코드 취합 */
--	,	STUFF(
--				(	
--					SELECT	'/' + C.SALES_GUBUN
--					FROM	(
--								SELECT CO.SALES_GUBUN
--								FROM	CUSTOM_ORDER CO
--								WHERE	1 = 1
--								AND		CO.MEMBER_ID = CUI.UID
--							) C
--					GROUP BY C.SALES_GUBUN
--					FOR XML PATH ('')
--				), 1, 1, '') AS WEDDING_INVITATION_CONVERSION_TO_PURCHASE_SITE_LIST
--	/* 청첩장 구매전환 여부 */
--	,	CASE WHEN ISNULL((SELECT TOP 1 MEMBER_ID FROM CUSTOM_ORDER WHERE MEMBER_ID = CUI.UID), '') = '' THEN 'N' ELSE 'Y' END AS WEDDING_INVITATION_CONVERSION_TO_PURCHASE_YORN

--	/* 샘플 구매전환 사이트 코드 취합 */
--	,	STUFF(
--				(	
--					SELECT	'/' + C.SALES_GUBUN
--					FROM	(
--								SELECT CSO.SALES_GUBUN
--								FROM	CUSTOM_SAMPLE_ORDER CSO
--								WHERE	1 = 1
--								AND		CSO.MEMBER_ID = CUI.UID
--							) C
--					GROUP BY C.SALES_GUBUN
--					FOR XML PATH ('')
--				), 1, 1, '') AS SAMPLE_CONVERSION_TO_PURCHASE_SITE_LIST
--	/* 샘플 구매전환 여부 */
--	,	CASE WHEN ISNULL((SELECT TOP 1 MEMBER_ID FROM CUSTOM_SAMPLE_ORDER WHERE MEMBER_ID = CUI.UID), '') = '' THEN 'N' ELSE 'Y' END AS SAMPLE_CONVERSION_TO_PURCHASE_YORN
	
--FROM	(
--			SELECT	*
--				,	(SELECT COUNT(*) FROM CTE_USER_INFO) AS TOTAL_LIST_COUNT
--			FROM	CTE_USER_INFO
--			ORDER BY REG_DATE DESC
--			OFFSET (@P_PAGE_NUMBER - 1) * @P_PAGE_SIZE ROWS
--			FETCH NEXT @P_PAGE_SIZE ROW ONLY

--		) CUI
--LEFT JOIN	MCARD_INVITATION MI ON CUI.UID = MI.AUTHCODE AND MI.SITECODE = @MCARD_SITE_DIV AND MI.PUBLISHYN = 'Y'

--WHERE	1 = 1

--GROUP BY CUI.UID
--ORDER BY MAX(CUI.REG_DATE) DESC



END
GO
