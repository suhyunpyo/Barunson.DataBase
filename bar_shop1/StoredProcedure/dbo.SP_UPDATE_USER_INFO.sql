IF OBJECT_ID (N'dbo.SP_UPDATE_USER_INFO', N'P') IS NOT NULL DROP PROCEDURE dbo.SP_UPDATE_USER_INFO
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*

select * from s2_userinfo where dupinfo = 'MC0GCCqGSIb3DQIJAyEAgQMn9E0TJmup1Yu5+Ws1cmQPM5Io02lOWvzoC0hwn0o='

select * from vw_user_info where uid = 's4guest'

select * from vw_user_info where dupinfo = 'MC0GCCqGSIb3DQIJAyEAgQMn9E0TJmup1Yu5+Ws1cmQPM5Io02lOWvzoC0hwn0o='

UPDATE	S2_USERINFO_THECARD
SET		INTEGRATION_MEMBER_YORN = 'N'
	,	INTERGRATION_DATE = null
	,	UID = 's4guest_1'
WHERE	dupinfo = 'MC0GCCqGSIb3DQIJAyEAgQMn9E0TJmup1Yu5+Ws1cmQPM5Io02lOWvzoC0hwn0o='

UPDATE	S2_USERINFO_BHANDS
SET		INTEGRATION_MEMBER_YORN = 'N'
	,	INTERGRATION_DATE = null
	,	UID = 's4guest_2'
WHERE	dupinfo = 'MC0GCCqGSIb3DQIJAyEAgQMn9E0TJmup1Yu5+Ws1cmQPM5Io02lOWvzoC0hwn0o='

UPDATE	S2_USERINFO
SET		INTEGRATION_MEMBER_YORN = 'N'
	,	INTERGRATION_DATE = null
	,	UID = 's4guest_3'
WHERE	dupinfo = 'MC0GCCqGSIb3DQIJAyEAgQMn9E0TJmup1Yu5+Ws1cmQPM5Io02lOWvzoC0hwn0o='
AND		SITE_DIV IN ( 'SS', 'H' )

UPDATE	S2_USERINFO
SET		INTEGRATION_MEMBER_YORN = 'N'
	,	INTERGRATION_DATE = null
	,	UID = 's4guest'
WHERE	dupinfo = 'MC0GCCqGSIb3DQIJAyEAgQMn9E0TJmup1Yu5+Ws1cmQPM5Io02lOWvzoC0hwn0o='
AND		SITE_DIV = 'SB'


*/

CREATE PROC [dbo].[SP_UPDATE_USER_INFO]
        @AUTHCODE               VARCHAR(100)
    ,   @USER_ID                VARCHAR(50)
    ,   @PASSWORD               VARCHAR(50)
    ,   @EMAIL                  VARCHAR(100)        
    ,   @ZIP1                   VARCHAR(3)
    ,   @ZIP2                   VARCHAR(3)
    ,   @ADDRESS                VARCHAR(150)
    ,   @ADDRESS_DETAIL         VARCHAR(150)
    ,   @PHONE1                 VARCHAR(4)
    ,   @PHONE2                 VARCHAR(4)
    ,   @PHONE3                 VARCHAR(4)
    ,   @HPHONE1                VARCHAR(4)
    ,   @HPHONE2                VARCHAR(4)
    ,   @HPHONE3                VARCHAR(4)
    ,   @CHK_SMS                CHAR(1)
    ,   @CHK_MAILSERVICE        CHAR(1)
	,   @BIRTH_DATE				VARCHAR(10)
	,   @BIRTH_DATE_TYPE        CHAR(1)
	,   @WEDDING_YEAR			VARCHAR(4)
	,   @WEDDING_MONTH			VARCHAR(2)
	,   @WEDDING_DAY			VARCHAR(2)
	,   @WEDDING_HALL			CHAR(1) = ''
AS  
SET NOCOUNT ON
BEGIN

	DECLARE @LOG_MSG VARCHAR(1000)

	BEGIN TRY
		BEGIN TRAN TR_UPDATE

			DECLARE @INTERGRATION_MEMBER_YORN AS VARCHAR(1) = 'N'
			SET @INTERGRATION_MEMBER_YORN = (SELECT ISNULL(MIN(INTEGRATION_MEMBER_YORN), 'N') FROM VW_USER_INFO WHERE DUPINFO = @AUTHCODE)

			SET @LOG_MSG = '@AUTHCODE : ' + @AUTHCODE + ', @PASSWORD : ' + @PASSWORD
			-- 전환 진행중 상태를 보기 위한 로그
			--EXEC SP_INSERT_BARUNN_INTEGRATE_USER_CHANGE_PROGRESS_LOG @AUTHCODE, '', 'SP_UPDATE_USER_INFO', @LOG_MSG

			DECLARE @PASSWORD_ENCRYPT AS VARCHAR(200)
			SET @PASSWORD_ENCRYPT = CONVERT(VARCHAR(200), PWDENCRYPT(@PASSWORD), 1)

			/* 바른손카드 */
			UPDATE	S2_USERINFO
			SET		PWD = CASE WHEN REPLACE(@PASSWORD, ' ', '') = '' THEN PWD ELSE @PASSWORD_ENCRYPT END
				,	PWD_BACKUP = CASE WHEN REPLACE(@PASSWORD, ' ', '') = '' THEN PWD_BACKUP ELSE @PASSWORD END /* 암호화 안정화 되면 지울것 */
				,	UMAIL = @EMAIL
				,	ZIP1 = @ZIP1
				,	ZIP2 = @ZIP2
				,	ADDRESS = @ADDRESS
				,	ADDR_DETAIL = @ADDRESS_DETAIL
				,	PHONE1 = @PHONE1
				,	PHONE2 = @PHONE2
				,	PHONE3 = @PHONE3
				,	HAND_PHONE1 = @HPHONE1
				,	HAND_PHONE2 = @HPHONE2
				,	HAND_PHONE3 = @HPHONE3
				,	CHK_SMS = @CHK_SMS
				,	CHK_MAILSERVICE = @CHK_MAILSERVICE
				,	BIRTH = @BIRTH_DATE
				,	BIRTH_DIV = @BIRTH_DATE_TYPE
				,	WEDD_YEAR = @WEDDING_YEAR
				,	WEDD_MONTH = @WEDDING_MONTH
				,	WEDD_DAY = @WEDDING_DAY
				,	WEDD_PGUBUN = @WEDDING_HALL
                ,   MOD_DATE = GETDATE()
				,	INTERGRATION_BEFORE_ID = CASE WHEN @INTERGRATION_MEMBER_YORN = 'N' AND INTERGRATION_BEFORE_ID IS NULL THEN UID ELSE INTERGRATION_BEFORE_ID END
			WHERE	DUPINFO = @AUTHCODE
			--AND		SITE_DIV = 'SB'



			/* 프리미어페이퍼 */
			--UPDATE	S2_USERINFO
			--SET		PWD = @PASSWORD
			--	,	UMAIL = @EMAIL
			--	,	ZIP1 = @ZIP1
			--	,	ZIP2 = @ZIP2
			--	,	ADDRESS = @ADDRESS
			--	,	ADDR_DETAIL = @ADDRESS_DETAIL
			--	,	PHONE1 = @PHONE1
			--	,	PHONE2 = @PHONE2
			--	,	PHONE3 = @PHONE3
			--	,	HAND_PHONE1 = @HPHONE1
			--	,	HAND_PHONE2 = @HPHONE2
			--	,	HAND_PHONE3 = @HPHONE3
			--	,	CHK_SMS = @CHK_SMS
			--	,	CHK_MAILSERVICE = @CHK_MAILSERVICE
			--	,	BIRTH = @BIRTH_DATE
			--	,	BIRTH_DIV = @BIRTH_DATE_TYPE
			--	,	WEDD_YEAR = @WEDDING_YEAR
			--	,	WEDD_MONTH = @WEDDING_MONTH
			--	,	WEDD_DAY = @WEDDING_DAY
			--	,	WEDD_PGUBUN = @WEDDING_HALL
			--	,	INTERGRATION_BEFORE_ID = CASE WHEN @INTERGRATION_MEMBER_YORN = 'N' AND INTERGRATION_BEFORE_ID IS NULL THEN UID ELSE INTERGRATION_BEFORE_ID END
			--WHERE	DUPINFO = @AUTHCODE
			--AND		SITE_DIV IN ( 'SS' , 'H' )



			/* 비핸즈카드 */
			UPDATE	S2_USERINFO_BHANDS
			SET		PWD = CASE WHEN REPLACE(@PASSWORD, ' ', '') = '' THEN PWD ELSE @PASSWORD_ENCRYPT END
				,	PWD_BACKUP = CASE WHEN REPLACE(@PASSWORD, ' ', '') = '' THEN PWD_BACKUP ELSE @PASSWORD END /* 암호화 안정화 되면 지울것 */
				,	UMAIL = @EMAIL
				,	ZIP1 = @ZIP1
				,	ZIP2 = @ZIP2
				,	ADDRESS = @ADDRESS
				,	ADDR_DETAIL = @ADDRESS_DETAIL
				,	PHONE1 = @PHONE1
				,	PHONE2 = @PHONE2
				,	PHONE3 = @PHONE3
				,	HAND_PHONE1 = @HPHONE1
				,	HAND_PHONE2 = @HPHONE2
				,	HAND_PHONE3 = @HPHONE3
				,	CHK_SMS = @CHK_SMS
				,	CHK_MAILSERVICE = @CHK_MAILSERVICE
				,	BIRTH = @BIRTH_DATE
				,	BIRTH_DIV = @BIRTH_DATE_TYPE
				,	WEDD_YEAR = @WEDDING_YEAR
				,	WEDD_MONTH = @WEDDING_MONTH
				,	WEDD_DAY = @WEDDING_DAY
				,	WEDD_PGUBUN = @WEDDING_HALL
                ,   MOD_DATE = GETDATE()
				,	INTERGRATION_BEFORE_ID = CASE WHEN @INTERGRATION_MEMBER_YORN = 'N' AND INTERGRATION_BEFORE_ID IS NULL THEN UID ELSE INTERGRATION_BEFORE_ID END
			WHERE	DUPINFO = @AUTHCODE



			/* 더카드 */
			UPDATE	S2_USERINFO_THECARD
			SET		PWD = CASE WHEN REPLACE(@PASSWORD, ' ', '') = '' THEN PWD ELSE @PASSWORD_ENCRYPT END
				,	PWD_BACKUP = CASE WHEN REPLACE(@PASSWORD, ' ', '') = '' THEN PWD_BACKUP ELSE @PASSWORD END /* 암호화 안정화 되면 지울것 */
				,	UMAIL = @EMAIL
				,	ZIP1 = @ZIP1
				,	ZIP2 = @ZIP2
				,	ADDRESS = @ADDRESS
				,	ADDR_DETAIL = @ADDRESS_DETAIL
				,	PHONE1 = @PHONE1
				,	PHONE2 = @PHONE2
				,	PHONE3 = @PHONE3
				,	HAND_PHONE1 = @HPHONE1
				,	HAND_PHONE2 = @HPHONE2
				,	HAND_PHONE3 = @HPHONE3
				,	CHK_SMS = @CHK_SMS
				,	CHK_MAILSERVICE = @CHK_MAILSERVICE
				,	BIRTH = @BIRTH_DATE
				,	BIRTH_DIV = @BIRTH_DATE_TYPE
				,	WEDD_YEAR = @WEDDING_YEAR
				,	WEDD_MONTH = @WEDDING_MONTH
				,	WEDD_DAY = @WEDDING_DAY
				,	WEDD_PGUBUN = @WEDDING_HALL
                ,   MOD_DATE = GETDATE()
				,	INTERGRATION_BEFORE_ID = CASE WHEN @INTERGRATION_MEMBER_YORN = 'N' AND INTERGRATION_BEFORE_ID IS NULL THEN UID ELSE INTERGRATION_BEFORE_ID END
			WHERE	DUPINFO = @AUTHCODE

		IF @@ERROR <> 0
			BEGIN

				SET @LOG_MSG = '@AUTHCODE : ' + @AUTHCODE + ', @PASSWORD : ' + @PASSWORD + ', ERROR_MSG : ' + ERROR_MESSAGE()
				 --전환 진행중 상태를 보기 위한 로그
				EXEC SP_INSERT_BARUNN_INTEGRATE_USER_CHANGE_PROGRESS_LOG @AUTHCODE, '', 'SP_UPDATE_USER_INFO', @LOG_MSG
			END
		ELSE
			BEGIN
				COMMIT TRAN TR_UPDATE
			END
	END TRY

	BEGIN CATCH
		BEGIN
			ROLLBACK TRAN TR_UPDATE

			SET @LOG_MSG = '@AUTHCODE : ' + @AUTHCODE + ', @PASSWORD : ' + @PASSWORD + ', ERROR_MSG : ' + ERROR_MESSAGE()
				--전환 진행중 상태를 보기 위한 로그
			EXEC SP_INSERT_BARUNN_INTEGRATE_USER_CHANGE_PROGRESS_LOG @AUTHCODE, '', 'SP_UPDATE_USER_INFO', @LOG_MSG
		END
	END CATCH


END
GO
