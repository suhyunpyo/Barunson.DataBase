IF OBJECT_ID (N'dbo.SP_REPORT_WEDDINGINVITATION_BY_FTICKET_LIST', N'P') IS NOT NULL DROP PROCEDURE dbo.SP_REPORT_WEDDINGINVITATION_BY_FTICKET_LIST
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*

EXEC SP_SELECT_INSPECTION_WEDDINGINVITATION_BY_FTICKET '', 'SA|SB', '2017-02-24', '2017-03-03', 'ORDER_DATE', 9999, 1, 'ORDER_DATE', 'DESC'

*/

CREATE PROCEDURE [dbo].[SP_REPORT_WEDDINGINVITATION_BY_FTICKET_LIST]
		@P_SEARCH_VALUE		AS VARCHAR(100)
	,	@P_SALES_GUBUN		AS VARCHAR(100)
	,	@P_START_DATE		AS VARCHAR(10)
	,	@P_END_DATE			AS VARCHAR(10)
	,	@P_DATE_TYPE		AS VARCHAR(50)
	,	@P_PAGE_SIZE		AS INT
	,	@P_PAGE_NUMBER		AS INT
	,	@P_ORDER_BY_NAME	AS VARCHAR(50)
	,	@P_ORDER_BY_TYPE	AS VARCHAR(10)
AS
BEGIN

	SET NOCOUNT ON

	DECLARE @ORDER_SEQ AS INT
	
	SET @ORDER_SEQ = CASE WHEN ISNUMERIC(@P_SEARCH_VALUE) = 1 THEN CONVERT(INT, @P_SEARCH_VALUE) ELSE null END



	SELECT	
			MAX(CO.ROW_NUM) AS RowNum
		,	MAX(CO.ROW_NUM_DESC) AS RowNumDesc
		,	CASE 
					WHEN MAX(CO.SALES_GUBUN) = 'SB' THEN '바른손카드' 
					WHEN MAX(CO.SALES_GUBUN) = 'SA' THEN '비핸즈카드' 
					WHEN MAX(CO.SALES_GUBUN) = 'ST' THEN '더카드' 
					WHEN MAX(CO.SALES_GUBUN) = 'SS' THEN '프리미어페이퍼' 
					WHEN MAX(CO.SALES_GUBUN) = 'B'  THEN '바른손몰' 
					WHEN MAX(CO.SALES_GUBUN) = 'C'  THEN '바른손몰' 
					WHEN MAX(CO.SALES_GUBUN) = 'H'  THEN '프리미어 제휴' 
					ELSE '기타' 
			END																AS SiteName
		,	MAX(C.COMPANY_NAME							)					AS CompanyName
		,	MAX(C.COMPANY_SEQ							)					AS CompanySeq
		,	MAX(C.ERP_PARTCODE							)					AS ErpPartCode
		,	MAX(CO.SALES_GUBUN							)					AS SalesGubun
		,	MAX(CO.ORDER_DATE							)					AS OrderDate
		,	MAX(CO.SRC_SEND_DATE						)					AS SrcSendDate
		,	ISNULL(MAX(CO.ORDER_PRICE				), 0)					AS OrderPrice
		,	ISNULL(MAX(CO.DISCOUNT_RATE				), 0)					AS DiscountRate
		,	ISNULL(MAX(CO.ORDER_TOTAL_PRICE			), 0)					AS OrderTotalPrice
		,	ISNULL(MAX(CO.DELIVERY_PRICE			), 0)					AS DeliveryPrice
		,	ISNULL(MAX(CO.JEBON_PRICE				), 0)					AS JebonPrice
		,	ISNULL(MAX(CO.STICKER_PRICE				), 0)					AS StickerPrice
		,	ISNULL(MAX(CO.MINI_PRICE				), 0)					AS MiniPrice
		,	ISNULL(MAX(CO.EMBO_PRICE				), 0)					AS EmboPrice	
		,	ISNULL(MAX(CO.ENV_PRICE					), 0)					AS EnvPrice
		,	ISNULL(MAX(CO.GUESTBOOK_PRICE			), 0)					AS GuestbookPrice
		,	ISNULL(MAX(CO.CONT_PRICE				), 0)					AS ContPrice
		,	ISNULL(MAX(CO.OPTION_PRICE				), 0)					AS OptionPrice
		,	ISNULL(MAX(CO.REDUCE_PRICE				), 0)					AS ReducePrice
		,	ISNULL(MAX(CO.PRINT_PRICE				), 0)					AS PrintPrice
		,	ISNULL(MAX(CO.SASIK_PRICE				), 0)					AS SasikPrice
		,	ISNULL(MAX(CO.LABEL_PRICE				), 0)					AS LabelPrice
		,	ISNULL(MAX(CO.ENVINSERT_PRICE			), 0)					AS EnvInsertPrice
		,	ISNULL(MAX(CO.ETC_PRICE					), 0)					AS EtcPrice
		,	ISNULL(MAX(CO.COOP_SALE_PRICE			), 0)					AS CoopSalePrice
		,	ISNULL(MAX(CO.POINT_PRICE				), 0)					AS PointPrice
		,	ISNULL(MAX(CO.LININGJAEBON_PRICE		), 0)					AS LiningJaebonPrice
		,	ISNULL(MAX(CO.TMAP_PRICE				), 0)					AS Tmap_Price
		,	ISNULL(MAX(CO.MONEYENV_PRICE			), 0)					AS MoneyEnvPrice
		,	ISNULL(MAX(CO.LASER_PRICE				), 0)					AS LaserPrice
		,	ISNULL(MAX(CO.ADDITION_REDUCE_PRICE		), 0)					AS AdditionReducePrice
		,	ISNULL(MAX(CO.LAST_TOTAL_PRICE			), 0)					AS LastTotalPrice
		,	ISNULL(MAX(CO.SETTLE_PRICE				), 0)					AS SettlePrice
		,	MAX(CO.ORDER_NAME							)					AS OrderName
		,	MAX(CO.ORDER_HPHONE							)					AS OrderHphone
		,	MAX(CO.MEMBER_ID							)					AS MemberId
		,	MAX(CO.ORDER_EMAIL							)					AS OrderEmail
		,	ISNULL(MAX(COW.WEDD_NAME), ''				)					AS WeddingHallName
		,	CO.ORDER_SEQ													AS OrderSeq
		,	CASE WHEN MAX(CO.UP_ORDER_SEQ) IS NULL THEN '' ELSE '추가' END	AS OrderType
		,	CASE 
					WHEN MAX(CO.ORDER_TYPE) = '1' THEN '청첩장'
					WHEN MAX(CO.ORDER_TYPE) = '2' THEN '감사장'
					WHEN MAX(CO.ORDER_TYPE) = '3' THEN '초대장'
					WHEN MAX(CO.ORDER_TYPE) = '6' THEN '포토청첩장'
					WHEN MAX(CO.ORDER_TYPE) = '7' THEN '이니셜청첩장'
					ELSE '기타' 
			END																AS OrderTypeName
		,	ISNULL((SELECT CARD_CODE FROM S2_CARD WHERE CARD_SEQ = MAX(CO.CARD_SEQ)), '') AS CardCode
		,	ISNULL(MAX(CO.ORDER_COUNT), 0) AS OrderCount
		,	ISNULL(MAX(CO.FTICKET_PRICE), 0) AS FticketPrice
		,	ISNULL(SUM(CASE WHEN SC.CARD_DIV IN ('C01','C02','C06','C09','C10','C11') THEN COI.ITEM_COUNT ELSE 0 END), 0) AS FticketCount

		,	ISNULL(STUFF((SELECT ',' + B.CARD_CODE FROM CUSTOM_ORDER_ITEM A JOIN S2_CARD B ON A.CARD_SEQ = B.CARD_SEQ AND B.CARD_DIV = 'C01' WHERE A.ORDER_SEQ = CO.ORDER_SEQ FOR XML PATH('')), 1, 1, ''), '') AS GroomFticket
		,	ISNULL(SUM(CASE WHEN SC.CARD_DIV = 'C01' THEN COI.ITEM_COUNT ELSE 0 END), 0) AS GroomFticketCount
		,	ISNULL(STUFF((SELECT ',' + B.CARD_CODE FROM CUSTOM_ORDER_ITEM A JOIN S2_CARD B ON A.CARD_SEQ = B.CARD_SEQ AND B.CARD_DIV = 'C02' WHERE A.ORDER_SEQ = CO.ORDER_SEQ FOR XML PATH('')), 1, 1, ''), '') AS BrideFticket
		,	ISNULL(SUM(CASE WHEN SC.CARD_DIV = 'C02' THEN COI.ITEM_COUNT ELSE 0 END), 0) AS BrideFticketCount
		,	ISNULL(STUFF((SELECT ',' + B.CARD_CODE FROM CUSTOM_ORDER_ITEM A JOIN S2_CARD B ON A.CARD_SEQ = B.CARD_SEQ AND B.CARD_DIV = 'C09' WHERE A.ORDER_SEQ = CO.ORDER_SEQ FOR XML PATH('')), 1, 1, ''), '') AS ChildGroomFticket
		,	ISNULL(SUM(CASE WHEN SC.CARD_DIV = 'C09' THEN COI.ITEM_COUNT ELSE 0 END), 0) AS ChildGroomFticketCount
		,	ISNULL(STUFF((SELECT ',' + B.CARD_CODE FROM CUSTOM_ORDER_ITEM A JOIN S2_CARD B ON A.CARD_SEQ = B.CARD_SEQ AND B.CARD_DIV = 'C10' WHERE A.ORDER_SEQ = CO.ORDER_SEQ FOR XML PATH('')), 1, 1, ''), '') AS ChildBrideFticket
		,	ISNULL(SUM(CASE WHEN SC.CARD_DIV = 'C10' THEN COI.ITEM_COUNT ELSE 0 END), 0) AS ChildBrideFticketCount

	FROM	(
				SELECT	ROW_NUMBER() OVER	(
												ORDER BY 
													CASE WHEN @P_ORDER_BY_NAME = 'ORDER_DATE'				THEN ORDER_DATE						ELSE 0 END ASC
												,	CASE WHEN @P_ORDER_BY_NAME = 'SRC_SEND_DATE'			THEN SRC_SEND_DATE					ELSE 0 END ASC
												,	ORDER_SEQ ASC
													
											) AS ROW_NUM
					,	ROW_NUMBER() OVER	(
												ORDER BY 
													CASE WHEN @P_ORDER_BY_NAME = 'ORDER_DATE'				THEN ORDER_DATE						ELSE 0 END DESC
												,	CASE WHEN @P_ORDER_BY_NAME = 'SRC_SEND_DATE'			THEN SRC_SEND_DATE					ELSE 0 END DESC
												,	ORDER_SEQ DESC
													
											) AS ROW_NUM_DESC
					,	SUB_CO.*
				FROM	CUSTOM_ORDER SUB_CO
				JOIN	S2_CARD SUB_S2 ON SUB_CO.CARD_SEQ = SUB_S2.CARD_SEQ
				WHERE	1 = 1
				AND		STATUS_SEQ = 15
				AND		CASE 
								WHEN @P_DATE_TYPE = 'ORDER_DATE' 
								THEN ORDER_DATE 
								ELSE SRC_SEND_DATE 
						END >= CONVERT(DATETIME, @P_START_DATE + ' 00:00:00')
				AND		CASE 
								WHEN @P_DATE_TYPE = 'ORDER_DATE' 
								THEN ORDER_DATE 
								ELSE SRC_SEND_DATE 
						END < DATEADD(DAY, 1, CONVERT(DATETIME, @P_END_DATE + ' 00:00:00'))
				AND		SALES_GUBUN IN (SELECT CAST(VALUE AS VARCHAR(20)) FROM dbo.[ufn_SplitTable] (@P_SALES_GUBUN, '|'))
				
				AND		(
								CASE WHEN @ORDER_SEQ IS NULL THEN 1 ELSE ORDER_SEQ END = @ORDER_SEQ
							OR	CASE WHEN REPLACE(@P_SEARCH_VALUE, ' ', '') = '' THEN '' ELSE SUB_CO.ORDER_NAME		END LIKE '%' + @P_SEARCH_VALUE + '%'
							OR	CASE WHEN REPLACE(@P_SEARCH_VALUE, ' ', '') = '' THEN '' ELSE SUB_CO.MEMBER_ID		END LIKE '%' + @P_SEARCH_VALUE + '%'
							OR	CASE WHEN REPLACE(@P_SEARCH_VALUE, ' ', '') = '' THEN '' ELSE SUB_CO.ORDER_EMAIL	END LIKE '%' + @P_SEARCH_VALUE + '%'
							OR	CASE WHEN REPLACE(@P_SEARCH_VALUE, ' ', '') = '' THEN '' ELSE SUB_CO.ORDER_HPHONE	END LIKE '%' + @P_SEARCH_VALUE + '%'
							OR	CASE WHEN REPLACE(@P_SEARCH_VALUE, ' ', '') = '' THEN '' ELSE SUB_CO.ORDER_EMAIL	END LIKE '%' + @P_SEARCH_VALUE + '%'
							OR	CASE WHEN REPLACE(@P_SEARCH_VALUE, ' ', '') = '' THEN '' ELSE SUB_S2.CARD_CODE		END LIKE '%' + @P_SEARCH_VALUE + '%'
							OR	CASE WHEN REPLACE(@P_SEARCH_VALUE, ' ', '') = '' THEN '' ELSE SUB_S2.CARD_NAME		END LIKE '%' + @P_SEARCH_VALUE + '%'
						)

			) CO
	JOIN	COMPANY C ON CO.COMPANY_SEQ = C.COMPANY_SEQ
	LEFT
	JOIN	CUSTOM_ORDER_ITEM COI ON CO.ORDER_SEQ = COI.ORDER_SEQ
	LEFT
	JOIN	S2_CARD SC ON COI.CARD_SEQ = SC.CARD_SEQ
	LEFT 
	JOIN	CUSTOM_ORDER_WEDDINFO COW ON CO.ORDER_SEQ = COW.ORDER_SEQ

	WHERE	1 = 1
	AND		CASE WHEN @P_ORDER_BY_TYPE = 'ASC' THEN CO.ROW_NUM ELSE CO.ROW_NUM_DESC END > (@P_PAGE_NUMBER - 1) * @P_PAGE_SIZE
	AND		CASE WHEN @P_ORDER_BY_TYPE = 'ASC' THEN CO.ROW_NUM ELSE CO.ROW_NUM_DESC END <= @P_PAGE_NUMBER * @P_PAGE_SIZE

	GROUP BY CO.ORDER_SEQ

	ORDER BY 
		CASE WHEN @P_ORDER_BY_TYPE = 'ASC' THEN MAX(CO.ROW_NUM) ELSE MAX(CO.ROW_NUM_DESC) END ASC
END


GO
