IF OBJECT_ID (N'dbo.SP_REPORT_HYUNDAI_MEMBERSHIP_AGREEMENT_MONTHLY_LIST', N'P') IS NOT NULL DROP PROCEDURE dbo.SP_REPORT_HYUNDAI_MEMBERSHIP_AGREEMENT_MONTHLY_LIST
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

/*

EXEC SP_REPORT_HYUNDAI_MEMBERSHIP_AGREEMENT_MONTHLY_LIST '2022-05-01', '2022-05-31', 'STATS'
EXEC SP_REPORT_HYUNDAI_MEMBERSHIP_AGREEMENT_MONTHLY_LIST '2022-04-29', '2022-04-30', 'LIST'

select * from HYUNDAI_DAILY_INFO
*/

CREATE PROCEDURE [dbo].[SP_REPORT_HYUNDAI_MEMBERSHIP_AGREEMENT_MONTHLY_LIST]
		@P_START_DATE		AS VARCHAR(10)
	,	@P_END_DATE			AS VARCHAR(10)
	,	@P_LIST_TYPE		AS VARCHAR(10)
AS
BEGIN

	SET NOCOUNT ON

	DECLARE @V_SRC_SDATE VARCHAR(10) = @P_START_DATE
	DECLARE @V_SRC_EDATE VARCHAR(10) = @P_END_DATE

	IF @P_LIST_TYPE = 'STATS' BEGIN
		
		SELECT *
		INTO #TABLE1
		FROM 
		(
	
			SELECT	REG_DATE_S
				,	CONNINFO
				,	LEAVE_CNT
				,	WEDD_YEAR
			FROM	(
						SELECT	
							A.CONNINFO
							, ROW_NUMBER()OVER(PARTITION BY A.CONNINFO ORDER BY A.CONNINFO) RM
							, CASE WHEN A.WEDDING_DAY <> '' THEN 1 ELSE 0 END WEDD_YEAR
							, CONVERT(VARCHAR ,A.CREATE_DATE   ,  23) REG_DATE_S
							, CASE WHEN C.CANCEL_DT <> '' THEN 1 ELSE 0 END LEAVE_CNT
						FROM
							HYUNDAI_DAILY_INFO A
							LEFT JOIN HYUNDAI_DAILY_INFO_CANCEL C ON C.UID = A.UID
						WHERE
							A.CREATE_DATE >= CONVERT(VARCHAR(10), DATEADD(DAY, 0, @V_SRC_SDATE),120) AND 
							A.CREATE_DATE < DATEADD(DAY, 2, CAST(CONVERT(VARCHAR, @V_SRC_EDATE, 23) AS DATETIME)) 
					) AA
			WHERE RM = 1
		) TB
		--WHERE CONVERT(VARCHAR(7), TB.REG_DATE_S,120)  = '2022-05'-- CONVERT(VARCHAR(7), @V_SRC_SDATE,120) 
		--order by  TB.REG_DATE_S desc
		
		
			SELECT *
			INTO #TABLE2
			FROM
			(
				SELECT	REGDATE = CASE WHEN GROUPING(REG_DATE_S) = 1 THEN '합계' ELSE CONVERT(VARCHAR(10), DATEADD(DAY, -1, REG_DATE_S), 120) END,
						CNT = COUNT(CONNINFO),  --예식일없는고객까지 전부
						HYUNDAIMEMBERSHIPLEAVEDATE = SUM(LEAVE_CNT),  --정보삭제요청고객
						TOTALCNT = SUM(WEDD_YEAR),   --예식일 있는회원만
						WEDDINGYEAR = 	(SUM(WEDD_YEAR) - SUM(LEAVE_CNT))  
				FROM	#TABLE1
				GROUP BY REG_DATE_S 
				WITH ROLLUP	
			) TB

			DECLARE @CNT INT 
			DECLARE @HYUNDAIMEMBERSHIPLEAVEDATE INT 
			DECLARE @TOTALCNT  INT
			DECLARE @WEDDINGYEAR  INT

			
			SELECT	@CNT = ISNULL(SUM(CNT), 0), 
					@HYUNDAIMEMBERSHIPLEAVEDATE = ISNULL(SUM(HYUNDAIMEMBERSHIPLEAVEDATE), 0),
					@TOTALCNT = ISNULL(SUM(TOTALCNT), 0) , 	
					@WEDDINGYEAR = ISNULL(SUM(WEDDINGYEAR), 0) 
			FROM #TABLE2 
			WHERE CONVERT(VARCHAR(7), REGDATE ,120)  = CONVERT(VARCHAR(7), @P_START_DATE,120) 

			SELECT * FROM #TABLE2
			WHERE CONVERT(VARCHAR(7), REGDATE ,120)  = CONVERT(VARCHAR(7), @P_START_DATE,120) 
			UNION 
			SELECT '합계' , @CNT , @HYUNDAIMEMBERSHIPLEAVEDATE, @TOTALCNT, @WEDDINGYEAR


			--SELECT	CASE WHEN GROUPING(REG_DATE_S) = 1 THEN '합계' ELSE CONVERT(VARCHAR(10), DATEADD(DAY, -1, REG_DATE_S), 120) END REGDATE
			--	,	COUNT(CONNINFO) CNT --예식일없는고객까지 전부
			--	,	SUM(LEAVE_CNT) HyundaiMembershipLeaveDate --정보삭제요청고객
			--	,	SUM(WEDD_YEAR)  TOTALCNT --예식일 있는회원만
			--	,	(SUM(WEDD_YEAR) - SUM(LEAVE_CNT))  WEDDINGYEAR
			--FROM	(
			--	SELECT	
			--		A.CONNINFO
			--		, ROW_NUMBER()OVER(PARTITION BY A.CONNINFO ORDER BY A.CONNINFO) RM
			--		, CASE WHEN A.WEDDING_DAY <> '' THEN 1 ELSE 0 END WEDD_YEAR
			--		, CONVERT(VARCHAR ,A.CREATE_DATE   ,  23) REG_DATE_S
   --                 , CASE WHEN C.CANCEL_DT <> '' THEN 1 ELSE 0 END LEAVE_CNT
			--	FROM
			--		HYUNDAI_DAILY_INFO A
			--		LEFT JOIN HYUNDAI_DAILY_INFO_CANCEL C ON C.UID = A.UID
			--	WHERE
			--		--A.CREATE_DATE <= DATEADD(DAY, 0, CAST(CONVERT(VARCHAR, GETDATE(), 23) AS DATETIME)  )
			--		A.CREATE_DATE >= CONVERT(VARCHAR(10), DATEADD(DAY, 0, @V_SRC_SDATE),120)
			--		AND A.CREATE_DATE < DATEADD(DAY, 1, CAST(CONVERT(VARCHAR, @V_SRC_EDATE, 23) AS DATETIME)  )

			--		) AA
			--WHERE RM = 1
			--GROUP BY REG_DATE_S 
			--WITH ROLLUP	

			--select DATEADD(DAY, 0, CAST(CONVERT(VARCHAR, GETDATE(), 23) AS DATETIME))
			--select CONVERT(VARCHAR(10), DATEADD(DAY, 0, '2022-04-29'),120)
			--select DATEADD(DAY, 1, CAST(CONVERT(VARCHAR,  '2022-04-30', 23) AS DATETIME))
								

		END  

	ELSE
		BEGIN

			SELECT CONNINFO, 
				   LIST_GB AS LISTGB
			FROM (
                    SELECT A.CONNINFO, 
						   RM = ROW_NUMBER() OVER(PARTITION BY A.CONNINFO ORDER BY A.CONNINFO), 
						   WEDD_YEAR_AA = A.WEDDING_DAY, 
						   CASE WHEN A.WEDDING_DAY <> '' THEN 1 ELSE 0 END WEDD_YEAR,
						   CASE WHEN A.WEDDING_DAY <> '' THEN 'Y'
								ELSE 'N' 
						   END LIST_GB
                    FROM   HYUNDAI_DAILY_INFO A
                    WHERE A.CREATE_DATE <= DATEADD(DAY ,  0 , CAST(CONVERT(VARCHAR, GETDATE()  ,  23) AS DATETIME)  )
						  AND A.CREATE_DATE >= CONVERT(VARCHAR(10),DATEADD(DAY,0,@V_SRC_SDATE),120)
						  AND A.CREATE_DATE < DATEADD(DAY ,  1 , CAST(CONVERT(VARCHAR, @V_SRC_EDATE  ,  23) AS DATETIME)  )
					      AND NOT EXISTS (SELECT 1 FROM HYUNDAI_DAILY_INFO_CANCEL B WHERE B.UID = A.UID)
				 ) AA
            WHERE	RM = 1
					AND LIST_GB IN( 'Y')
            ORDER BY WEDD_YEAR_AA	
		


     --       SELECT	CONNINFO 
     --       , LIST_GB AS LISTGB
     --       FROM	(
     --               SELECT 
     --                   A.CONNINFO
     --                   , ROW_NUMBER() OVER(PARTITION BY A.CONNINFO ORDER BY A.CONNINFO) RM
     --                   , A.WEDDING_DAY WEDD_YEAR_AA
     --                   , CASE WHEN A.WEDDING_DAY <> '' THEN 1 ELSE 0 END WEDD_YEAR
     --                   ,	CASE 
     --                           WHEN A.WEDDING_DAY <> '' THEN 'Y'
     --                           ELSE 'N' 
     --                       END LIST_GB
     --               FROM
     --                   CUCKOOS_DAILY_INFO A
     --               WHERE
     --                   A.FILE_DT <= DATEADD(DAY ,  0 , CAST(CONVERT(VARCHAR, GETDATE()  ,  23) AS DATETIME)  )
					--AND A.FILE_DT >= CONVERT(VARCHAR(10),DATEADD(DAY,0,@V_SRC_SDATE),120)
					--AND A.FILE_DT < DATEADD(DAY ,  1 , CAST(CONVERT(VARCHAR, @V_SRC_EDATE  ,  23) AS DATETIME)  )
     --               AND NOT EXISTS (SELECT 1 FROM CUCKOOS_DAILY_INFO_CANCEL B WHERE B.UID = A.UID)
     --       ) AA
     --       WHERE	RM = 1
     --       AND		LIST_GB IN( 'Y')
     --       ORDER BY WEDD_YEAR_AA									

		END

END


GO
